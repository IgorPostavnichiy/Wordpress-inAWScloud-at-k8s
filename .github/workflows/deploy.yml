name: "Deploy K8S with AWS"

on:
  push:
    paths:
    - 'terraform-aws-eks/**' 
    - '.github/workflows/deploy.yml'
    branches:
    - master
  workflow_dispatch:

jobs:
  # terraform-CI:
  #     name: "terraform-CI"
  #     runs-on: ubuntu-latest
  #     defaults:
  #       run:
  #         working-directory: terraform-aws-eks
  #     env:
  #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       AWS_REGION: ${{ secrets.AWS_REGION }}

  #     steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v1
  #       with:
  #         terraform_version: latest
  #         terraform_wrapper: false
      
  #     - name: Terraform Format
  #       id: fmt
  #       run: terraform fmt
        
  #     - name: Terraform Init
  #       id: init
  #       run: terraform init

  #     - name: Terraform Plan
  #       id: plan
  #       run: terraform plan -no-color

  #     - name: Terraform Apply
  #       if: "!contains(github.event.head_commit.message, 'destroy')"
  #       run: terraform apply -auto-approve -lock=false

  #     - name: Terraform Destroy
  #       if: contains(github.event.head_commit.message, 'destroy')
  #       run: terraform destroy -auto-approve -lock=false

  #     - name: Print CI status message
  #       run: echo "CI pipeline part finished successfully!" 

  terraform-CD:
      needs: 
        - terraform-CI
      if: "!contains(github.event.head_commit.message, 'destroy') "
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: terraform-aws-eks
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

      steps:
      - name: Clon Rep
        uses: actions/checkout@v3

      - name: Install and configure kubectl
        run: |
          VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
          curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
            --progress-bar \
            --location \
            --remote-name
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
  
      - name: Get Kubeconfig
        run: aws eks update-kubeconfig --region eu-north-1 --name igor-cluster-eks

      - name: Apply Kubernetes manifest
        run: kubectl apply -f mysql.yml

      - name: Wait for 15 seconds()
        run: sleep 20s

      - name: Check Service
        run: kubectl get service

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -lock=false
      
      - name: Print CD status message
        run: echo "CD pipeline part finished successfully!"